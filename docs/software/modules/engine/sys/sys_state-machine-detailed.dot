# Copyright (c) 2010 - 2021, Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V.
# All rights reserved.
#
# SPDX-License-Identifier: BSD-3-Clause
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# We kindly request you to use one or more of the following phrases to refer to
# foxBMS in your hardware, software, documentation or advertising materials:
#
# - "This product uses parts of foxBMS®"
# - "This product includes parts of foxBMS®"
# - "This product is derived from foxBMS®"

digraph sys_fsm_states_detailed {
    rankdir=TB;
    node [shape = doublecircle]     nd_uninitialized
                                    nd_running
                                    nd_error;
    node [shape = circle]           nd_initialization_check_deep_discharge
                                    nd_initialization_sbc
                                    nd_initialization_can
                                    nd_initialization_send_boot_message
                                    nd_initialization_interlock
                                    nd_initialization_contactors
                                    nd_initialization_balancing
                                    nd_initialization_insulation_guard
                                    ;

    nd_uninitialized                            [label=<<B>Uninitialized</B>>];
    nd_initialization_check_deep_discharge      [label=<<B>I</B><SUB>CDDC</SUB>>];
    nd_initialization_sbc                       [label=<<B>I</B><SUB>SBC</SUB>>];
    nd_initialization_can                       [label=<<B>I</B><SUB>CAN</SUB>>];
    nd_initialization_send_boot_message         [label=<<B>I</B><SUB>BOOT</SUB>>];
    nd_initialization_interlock                 [label=<<B>I</B><SUB>ILCK</SUB>>];
    nd_initialization_contactors                [label=<<B>I</B><SUB>CONT</SUB>>];
    nd_initialization_balancing                 [label=<<B>I</B><SUB>BAL</SUB>>];
    nd_initialization_insulation_guard          [label=<<B>I</B><SUB>ISO</SUB>>];
    nd_initialization_check_current_sensor      [label=<<B>I</B><SUB>CCS</SUB>>];
    nd_initialization_misc                      [label=<<B>I</B><SUB>MISC</SUB>>];
    nd_initialization_bms                       [label=<<B>I</B><SUB>BMS</SUB>>];
    nd_running                                  [label=<<B>Running</B>>];
    nd_error                                    [label=<<B>Error</B>>];

    nd_uninitialized                        -> nd_initialization_check_deep_discharge      [label = "Initialize"]
    nd_initialization_check_deep_discharge  -> nd_initialization_sbc
    nd_initialization_sbc                   -> nd_initialization_can
    nd_initialization_can                   -> nd_initialization_send_boot_message
    nd_initialization_send_boot_message     -> nd_initialization_interlock
    nd_initialization_interlock             -> nd_initialization_contactors
    nd_initialization_contactors            -> nd_initialization_balancing
    nd_initialization_balancing             -> nd_initialization_insulation_guard
    nd_initialization_insulation_guard      -> nd_initialization_check_current_sensor
    nd_initialization_check_current_sensor  -> nd_initialization_misc
    nd_initialization_misc                  -> nd_initialization_bms
    nd_initialization_bms                   -> nd_running
    nd_running                              -> nd_running                                   [label = "Operational mode"];

    nd_initialization_sbc -> nd_error
    nd_initialization_send_boot_message -> nd_error
}
